services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports:
      - "8000:8000"
    volumes:
      - ${PWD}/chromadb_storage:/data

  chromadb-admin:
    image: fengzhichao/chromadb-admin:latest
    container_name: chromadb-admin
    ports:
      - "3000:3000"
    environment:
      - CHROMADB_URL=http://chromadb:8000
    depends_on:
      - chromadb

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ${PWD}/postgress_storage:/var/lib/postgresql/data

  airflow-webserver:
    build: .
    container_name: airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
      - AIRFLOW__WEBSERVER__RBAC=True
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: >
      bash -c "airflow db init && airflow webserver"
    env_file:
      - .env
    volumes:
      - ${PWD}/dags:/opt/airflow/dags  # Mount the dags folder


  airflow-scheduler:
    build: .
    container_name: airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
    depends_on:
      - postgres
      - airflow-webserver
    command: >
      bash -c "airflow scheduler"
    env_file:
      - .env
    volumes:
      - ${PWD}/dags:/opt/airflow/dags  # Mount the dags folder


  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=legal
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - ${PWD}/data/:/data
    command: server /data --console-address ":9001"

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jtest
    ports:
      - "7474:7474"  # Browser
      - "7687:7687"  # Bolt protocol
    volumes:
      - ${PWD}/neo4j_data:/data

volumes:
  chromadb_data:
  postgres_data:
